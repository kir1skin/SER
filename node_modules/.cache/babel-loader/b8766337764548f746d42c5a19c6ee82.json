{"ast":null,"code":"import { useRef, useContext, useEffect } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nfunction useAnimationFrame(callback) {\n  const initialTimestamp = useRef(0);\n  const {\n    isStatic\n  } = useContext(MotionConfigContext);\n  useEffect(() => {\n    if (isStatic) return;\n\n    const provideTimeSinceStart = _ref => {\n      let {\n        timestamp,\n        delta\n      } = _ref;\n      if (!initialTimestamp.current) initialTimestamp.current = timestamp;\n      callback(timestamp - initialTimestamp.current, delta);\n    };\n\n    frame.update(provideTimeSinceStart, true);\n    return () => cancelFrame(provideTimeSinceStart);\n  }, [callback]);\n}\n\nexport { useAnimationFrame };","map":null,"metadata":{},"sourceType":"module"}